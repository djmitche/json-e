version: 1
reporting: checks-v1
policy:
  pullRequests: public
tasks:
  $let:
    owner: taskcluster-internal@mozilla.com

    # This only supports pushes and pull requests for now.
    # If we start responding to another action type, make this
    # a $match.
    repo:
      $if: 'tasks_for == "github-push"'
      then:
        git_url: ${event.repository.url}
        url: ${event.repository.url}
        ref: ${event.after}
      else:
        git_url: ${event.pull_request.head.repo.git_url}
        url: ${event.pull_request.head.repo.url}
        ref: ${event.pull_request.head.sha}
  in:
    $let:
      environments:
        - image: node:15
          name: node:15 tests
          command:
            - /bin/bash
            - '--login'
            - '-c'
            - >-
              git clone ${repo.git_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              cd js &&
              yarn &&
              yarn test
        - image: node:10
          name: node:10 tests
          command:
            - /bin/bash
            - '--login'
            - '-c'
            - >-
              git clone ${repo.git_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              cd js &&
              yarn &&
              yarn test
        - image: 'node:15'
          name: node import test
          command:
            - /bin/bash
            - '--login'
            - '-c'
            - >-
              git clone ${repo.git_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              cd js &&
              yarn &&
              bash package-test.sh
        - image: 'python:2.7'
          name: python:2.7 tests
          command:
            - /bin/bash
            - '--login'
            - '-c'
            - >-
              git clone ${repo.git_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              cd py/ &&
              pip install tox &&
              tox -e py27
        - image: 'python:3.6'
          name: python:3.6 tests
          command:
            - /bin/bash
            - '--login'
            - '-c'
            - >-
              git clone ${repo.git_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              cd py/ &&
              pip install tox &&
              tox -e py36
        - image: 'python:3.7'
          name: python:3.7 tests
          command:
            - /bin/bash
            - '--login'
            - '-c'
            - >-
              git clone ${repo.git_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              cd py/ &&
              pip install tox &&
              tox -e py37
        - image: 'golangci/golangci-lint'
          name: golang lint and tests
          command:
            - /bin/bash
            - '-c'
            - >-
              git clone ${repo.git_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              go get -v -d -t ./... &&
              go test -v -race ./... &&
              golangci-lint run
        - image: 'rust:latest'
          name: rust tests
          command:
            - /bin/bash
            - '-c'
            - >-
              git clone ${repo.git_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              cd rs/ &&
              cargo test
        - image: 'rust:latest'
          name: rust tests
          command:
            - /bin/bash
            - '-c'
            - >-
              git clone ${repo.git_url} repo &&
              cd repo &&
              git config advice.detachedHead false &&
              git checkout ${repo.ref} &&
              curl -ssL https://github.com/rust-lang/mdBook/releases/download/v0.4.15/mdbook-v0.4.15-x86_64-unknown-linux-gnu.tar.gz | tar -zxf - &&
              ./mdbook test
    in:
      $let:
        tests:
          $map: {$eval: environments}
          each(env):
            taskId: {$eval: as_slugid(env.name)}
            provisionerId: proj-taskcluster
            workerType: ci
            created: {$fromNow: ''}
            deadline: {$fromNow: '60 minutes'}
            payload:
              maxRunTime: 3600
              image: ${env.image}
              command: {$eval: 'env.command'}
            metadata:
              name: ${env.name}
              description: ${env.name}
              owner: ${owner}
              source: ${repo.url}

      in:
        $flattenDeep:
        - $if: 'tasks_for == "github-push"'
          then: {$eval: tests}
        - $if: 'tasks_for == "github-pull-request" && event["action"] in ["opened", "reopened", "synchronize"]'
          then:
            # We can skip this if pushed to our own repo since push event will get it
            $if: 'event.pull_request.base.repo.id != event.pull_request.head.repo.id'
            then: {$eval: tests}
